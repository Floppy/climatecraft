diff --git a/minecraft/net/minecraft/client/Minecraft.java b/minecraft/net/minecraft/client/Minecraft.java
index 1f0b017..f082070 100644
--- a/minecraft/net/minecraft/client/Minecraft.java
+++ b/minecraft/net/minecraft/client/Minecraft.java
@@ -127,6 +127,7 @@ import org.lwjgl.opengl.GL20;
 import org.lwjgl.opengl.GLContext;
 import org.lwjgl.opengl.PixelFormat;
 import org.lwjgl.util.glu.GLU;
+import com.amee.minecraft.CarbonCounter;
 
 public abstract class Minecraft implements Runnable, IPlayerUsage {
    public static byte[] memoryReserve = new byte[10485760];
@@ -1393,6 +1394,8 @@ public abstract class Minecraft implements Runnable, IPlayerUsage {
       this.integratedServerIsRunning = true;
       this.loadingScreen.displayProgressMessage(StatCollector.translateToLocal("menu.loadingLevel"));
 
+      CarbonCounter.init(thePlayer);
+
       while(!this.theIntegratedServer.serverIsInRunLoop()) {
          String var6 = this.theIntegratedServer.getUserMessage();
          if(var6 != null) {
diff --git a/minecraft/net/minecraft/src/GuiIngame.java b/minecraft/net/minecraft/src/GuiIngame.java
index 76ed758..9127d7b 100644
--- a/minecraft/net/minecraft/src/GuiIngame.java
+++ b/minecraft/net/minecraft/src/GuiIngame.java
@@ -9,6 +9,8 @@ import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
+import com.amee.minecraft.CarbonCounter;
+
 public class GuiIngame extends Gui {
    private static final RenderItem itemRenderer = new RenderItem();
    private final Random rand = new Random();
@@ -369,6 +371,9 @@ public class GuiIngame extends Gui {
          this.drawString(var8, String.format("ws: %.3f, fs: %.3f, g: %b, fl: %d", new Object[]{Float.valueOf(this.mc.thePlayer.capabilities.getWalkSpeed()), Float.valueOf(this.mc.thePlayer.capabilities.getFlySpeed()), Boolean.valueOf(this.mc.thePlayer.onGround), Integer.valueOf(this.mc.theWorld.getHeightValue(var47, var23))}), 2, 104, 14737632);
          GL11.glPopMatrix();
          this.mc.mcProfiler.endSection();
+      } else
+      {
+         var8.drawStringWithShadow("CO2: " + com.amee.minecraft.Atmosphere.totalAsString(), 2, 2, 0xffffff);
       }
 
       if(this.recordPlayingUpFor > 0) {
diff --git a/minecraft/net/minecraft/src/RenderBlocks.java b/minecraft/net/minecraft/src/RenderBlocks.java
index 31761cb..4f63b72 100644
--- a/minecraft/net/minecraft/src/RenderBlocks.java
+++ b/minecraft/net/minecraft/src/RenderBlocks.java
@@ -3908,6 +3908,7 @@ public class RenderBlocks {
    }
 
    public boolean func_102027_b(Block param1, int param2, int param3, int param4, float param5, float param6, float param7) {
+     return false;
    }
 
    private int getAoBrightness(int par1, int par2, int par3, int par4) {
diff --git a/minecraft/net/minecraft/src/WorldGenerator.java b/minecraft/net/minecraft/src/WorldGenerator.java
index cbaf3db..161aa73 100644
--- a/minecraft/net/minecraft/src/WorldGenerator.java
+++ b/minecraft/net/minecraft/src/WorldGenerator.java
@@ -3,7 +3,7 @@ package net.minecraft.src;
 import java.util.Random;
 
 public abstract class WorldGenerator {
-   private final boolean doBlockNotify;
+   protected final boolean doBlockNotify;
 
    public WorldGenerator() {
       this.doBlockNotify = false;
diff --git a/minecraft/net/minecraft/src/WorldProvider.java b/minecraft/net/minecraft/src/WorldProvider.java
index b844e4a..3dde35e 100644
--- a/minecraft/net/minecraft/src/WorldProvider.java
+++ b/minecraft/net/minecraft/src/WorldProvider.java
@@ -1,4 +1,5 @@
 package net.minecraft.src;
+import com.amee.minecraft.Atmosphere;
 
 public abstract class WorldProvider {
    public World worldObj;
@@ -105,6 +106,10 @@ public abstract class WorldProvider {
       var4 *= var3 * 0.94F + 0.06F;
       var5 *= var3 * 0.94F + 0.06F;
       var6 *= var3 * 0.91F + 0.09F;
+      float fogColourScale = Atmosphere.fogColourScale();
+      var4 *= fogColourScale;
+      var5 *= fogColourScale;
+      var6 *= fogColourScale;
       return this.worldObj.getWorldVec3Pool().getVecFromPool((double)var4, (double)var5, (double)var6);
    }
 
@@ -117,7 +122,7 @@ public abstract class WorldProvider {
    }
 
    public float getCloudHeight() {
-      return 128.0F;
+     return 128.0F + Atmosphere.cloudHeightOffset();
    }
 
    public boolean isSkyColored() {
